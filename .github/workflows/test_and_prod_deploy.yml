name: deploy_docker_images

on:
  push:
    branches: ['main']

jobs:
  backend_integration_tests:
    name: Backend integration tests
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create .env
      run: cp .env.example .env

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build backend api
      uses: docker/build-push-action@v4
      with:
        push: false
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/distritv-api:latest,${{ secrets.DOCKERHUB_USERNAME }}/distritv-api:${{ github.sha }}
        file: Dockerfile.production
        context: "{{defaultContext}}:services/api"

    - name: Build frontend
      uses: docker/build-push-action@v4
      with:
        push: false
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/distritv-dashboard:latest,${{ secrets.DOCKERHUB_USERNAME }}/distritv-dashboard:${{ github.sha }}
        file: Dockerfile.production
        context: "{{defaultContext}}:services/dashboard"

    - name: Start containers
      run: docker-compose up -d -f "docker-compose.prod.yml"

    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - name: Install dependencies
      run: yarn
      working-directory: services/api

    - name: Check API status
      run: docker-compose logs api

    - name: Run tests
      run: yarn test
      working-directory: services/api

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.prod.yml" down

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push backend
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/distritv-api:latest,${{ secrets.DOCKERHUB_USERNAME }}/distritv-api:${{ github.sha }}
        file: Dockerfile.production
        context: "{{defaultContext}}:services/api"

    - name: Push frontend
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/distritv-dashboard:latest,${{ secrets.DOCKERHUB_USERNAME }}/distritv-dashboard:${{ github.sha }}
        file: Dockerfile.production
        context: "{{defaultContext}}:services/api"

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_SSH_HOST }}
        username: ${{ secrets.SERVER_SSH_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        script: |
          cd $`{{ SERVER_PROJECT_DIR }} && docker-compose up -f docker-compose.prod.yml up -d --build --force-recreate
